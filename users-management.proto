syntax = "proto3";

option go_package = "./users-management-service";

package protos;

import "google/protobuf/empty.proto";

service UserManager {
  rpc RegisterUser (RegisterRequest) returns (RegisterResponse) {}
  rpc LoginUser (LoginRequest) returns (LoginResponse) {}
  rpc LogoutUser (LogoutRequest) returns (google.protobuf.Empty) {}
  rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {}
  rpc VerifyTokenRevoation (VerifyTokenRevoationRequest) returns (VerifyTokenRevoationResponse) {}
  rpc SetAuthProviderCredentials (SetAuthProviderCredentialsRequest) returns (SetAuthProviderCredentialsResponse) {}
  rpc GetAuthProviderCredentials (GetAuthProviderCredentialsRequest) returns (GetAuthProviderCredentialsResponse) {}
  rpc EnableAuthProvider (EnableAuthProviderRequest) returns (EnableAuthProviderResponse) {}
  rpc DisableAuthProvider (DisableAuthProviderRequest) returns (DisableAuthProviderResponse) {}
  rpc GetGoogleAuthorizationUrl (google.protobuf.Empty) returns (GoogleAuthorizationUrlResponse) {}
  rpc HandleGoogleLogin (GoogleLoginRequest) returns (GoogleLoginResponse) {}
  rpc ListAuthProviders (google.protobuf.Empty) returns (ListAuthProvidersResponse) {}
  rpc RegisterAdmin(RegisterAdminRequest) returns (RegisterAdminResponse) {}
  rpc LoginAdmin(LoginRequest) returns (LoginResponse) {}
  rpc ListUsers(google.protobuf.Empty) returns (stream User) {}
  rpc GetGitHubAuthorizationUrl(google.protobuf.Empty) returns (GitHubAuthorizationUrlResponse) {}
  rpc HandleGitHubLogin(GitHubLoginRequest) returns (GitHubLoginResponse) {}
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (RequestPasswordResetResponse) {}
  rpc ConfirmPasswordReset(ConfirmPasswordResetRequest) returns (ConfirmPasswordResetResponse) {}
  rpc RequestEmailVerification(RequestEmailVerificationRequest) returns (RequestEmailVerificationResponse) {}
  rpc ConfirmMFA(ConfirmMFARequest) returns (ConfirmMFAResponse) {}
  rpc ToggleMFA(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message LogoutRequest {
  uint64 user_id = 1;
  string jti = 2;
}

message VerifyTokenRevoationRequest {
  string jti = 1;
}

message VerifyTokenRevoationResponse {
  bool status = 1;
}

enum AuthProviderName {
  GOOGLE = 0;
  GITHUB = 1;
}

// The request message containing the user's name.
message RegisterRequest{
  string email = 1;
  string password = 2;
  string password_confirmation = 3;
  string name = 4;
}

// The response message containing the greetings
message RegisterResponse{
  string message = 1;
}

message LoginRequest{
  string email = 1;
  string password = 2;
}

message LoginResponse{
  string message = 1;
  string token = 2;
}

message VerifyEmailRequest{
  string token = 1;
}

message VerifyEmailResponse{
  string message = 1;
}

message SetAuthProviderCredentialsRequest{
  uint64 auth_provider_id = 1;
  string client_id = 2;
  string client_secret = 3;
  string redirect_uri = 4;
}

message SetAuthProviderCredentialsResponse{
  string message = 1;
}

message EnableAuthProviderRequest{
  uint64 auth_provider_id = 1;
}

message EnableAuthProviderResponse{
  string message = 1;
}

message DisableAuthProviderRequest{
  uint64 auth_provider_id = 1;
}

message DisableAuthProviderResponse{
  string message = 1;
}

message GoogleAuthorizationUrlResponse{
  string url = 1;
  string state = 2;
}

message GoogleLoginRequest{
  string name = 1;
  string email = 2;
  string identifier = 3;
}

message GoogleLoginResponse{
  string message = 1;
  string token = 2;
}

message AuthProvider{
  uint64 id = 1;
  string name = 2;
  string client_id = 3;
  bool active = 5;
  string redirect_uri = 6;
}

message ListAuthProvidersResponse{
  repeated AuthProvider auth_providers = 1;
}

message RegisterAdminRequest{
  string email = 1;
  string password = 2;
  string password_confirmation = 3;
}

message RegisterAdminResponse{
  string message = 1;
}

message User{
  uint64 id = 1;
  string name = 2;
  string email = 3;
  bool is_verified = 4;
  string auth_provider = 5;
  string created_at = 6;
  string updated_at = 7;
}

message GitHubAuthorizationUrlResponse {
  string url = 1;
  string state = 2;
}

message GitHubLoginRequest {
  string name = 1;
  string email = 2;
  string identifier = 3;
}

message GitHubLoginResponse {
  string message = 1;
  string token = 2;
}

message GetAuthProviderCredentialsRequest {
  AuthProviderName auth_provider = 1;
}

message GetAuthProviderCredentialsResponse {
  string client_id = 1;
  string client_secret = 2;
  string redirect_uri = 3;
}

message RequestPasswordResetRequest {
  string email = 1;
}

message RequestPasswordResetResponse {
  string message = 1;
}

message ConfirmPasswordResetRequest {
  string code = 1;
  string password = 2;
  string password_confirmation = 3;
}

message ConfirmPasswordResetResponse {
  string message = 1;
}

message RequestEmailVerificationRequest {
  string email = 1;
}

message RequestEmailVerificationResponse {
  string message = 1;
}

message ConfirmMFARequest {
  string code = 1;
}

message ConfirmMFAResponse {
  string token = 1;
}
